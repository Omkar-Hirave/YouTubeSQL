/*Write a query to fetch the record of brand whose amount is increasing every year.*/

/*CREATING THE TABLE AND INSERTING THE VALUES*/
drop table brands;
create table brands
(
    Year    int,
    Brand   varchar(20),
    Amount  int
);
insert into brands values (2018, 'Apple', 45000);
insert into brands values (2019, 'Apple', 35000);
insert into brands values (2020, 'Apple', 75000);
insert into brands values (2018, 'Samsung', 15000);
insert into brands values (2019, 'Samsung', 20000);
insert into brands values (2020, 'Samsung', 25000);
insert into brands values (2018, 'Nokia', 21000);
insert into brands values (2019, 'Nokia', 17000);
insert into brands values (2020, 'Nokia', 14000);

--DISPLYING THE TABLE VALUES
 SELECT * FROM brands;
+------+---------+--------+
| Year | Brand   | Amount |
+------+---------+--------+
| 2018 | Apple   |  45000 |
| 2019 | Apple   |  35000 |
| 2020 | Apple   |  75000 |
| 2018 | Samsung |  15000 |
| 2019 | Samsung |  20000 |
| 2020 | Samsung |  25000 |
| 2018 | Nokia   |  21000 |
| 2019 | Nokia   |  17000 |
| 2020 | Nokia   |  14000 |
+------+---------+--------+
9 rows in set (0.00 sec)


/*The solution is */
WITH cte AS (
SELECT * ,
CASE WHEN amount < LEAD(amount,1,amount+1) OVER(PARTITION BY brand ORDER BY Year) THEN 1 ELSE 0 END AS flag
FROM brands )
SELECT * 
FROM brands 
WHERE brand NOT IN (SELECT brand FROM cte WHERE flag = 0 )

+------+---------+--------+
| Year | Brand   | Amount |
+------+---------+--------+
| 2018 | Samsung |  15000 |
| 2019 | Samsung |  20000 |
| 2020 | Samsung |  25000 |
+------+---------+--------+
3 rows in set (0.01 sec)
